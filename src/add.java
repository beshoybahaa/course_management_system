
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 * @author pc
 */
public class add extends javax.swing.JFrame {
    private String oldEmail;

    /**
     * Creates new form add
     */
    public add() {

        initComponents();
        try {
            getDataForAdminTable();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            getDataForStdTable();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            getDataForInstTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        adminPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        addAdmin = new javax.swing.JButton();
        updateAdmin = new javax.swing.JButton();
        deleteAdmin = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        instructorPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        emailTextField1 = new javax.swing.JTextField();
        passwordTextField1 = new javax.swing.JTextField();
        addInstructor = new javax.swing.JButton();
        updateInstructor = new javax.swing.JButton();
        deleteInstructor = new javax.swing.JButton();
        back1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        instIdTextField2 = new javax.swing.JTextField();
        studentPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        emailTextField2 = new javax.swing.JTextField();
        passwordTextField2 = new javax.swing.JTextField();
        addStudent = new javax.swing.JButton();
        updateStudent = new javax.swing.JButton();
        deleteStudent = new javax.swing.JButton();
        back2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        stdIdTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("edit users");

        jLabel1.setText("email :");

        jLabel2.setText("password :");

        addAdmin.setText("add");
        addAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAdminActionPerformed(evt);
            }
        });

        updateAdmin.setText("update");
        updateAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAdminActionPerformed(evt);
            }
        });

        deleteAdmin.setText("delete");
        deleteAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAdminActionPerformed(evt);
            }
        });

        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jTable1.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "email", "password"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailTextField)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(addAdmin)
                        .addGap(18, 18, 18)
                        .addComponent(updateAdmin)
                        .addGap(18, 18, 18)
                        .addComponent(deleteAdmin))
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83)
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addAdmin)
                            .addComponent(updateAdmin)
                            .addComponent(deleteAdmin))
                        .addGap(18, 18, 18)
                        .addComponent(back))
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("admin", adminPanel);

        jLabel3.setText("email :");

        jLabel4.setText("password :");

        addInstructor.setText("add");
        addInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInstructorActionPerformed(evt);
            }
        });

        updateInstructor.setText("update");
        updateInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInstructorActionPerformed(evt);
            }
        });

        deleteInstructor.setText("delete");
        deleteInstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInstructorActionPerformed(evt);
            }
        });

        back1.setText("back");
        back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "email", "password", "instructor id"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel5.setText("instructor id :");

        javax.swing.GroupLayout instructorPanelLayout = new javax.swing.GroupLayout(instructorPanel);
        instructorPanel.setLayout(instructorPanelLayout);
        instructorPanelLayout.setHorizontalGroup(
            instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(instructorPanelLayout.createSequentialGroup()
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(32, 32, 32)
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(instructorPanelLayout.createSequentialGroup()
                        .addComponent(addInstructor)
                        .addGap(18, 18, 18)
                        .addComponent(updateInstructor)
                        .addGap(18, 18, 18)
                        .addComponent(deleteInstructor))
                    .addComponent(back1)
                    .addGroup(instructorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(instIdTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        instructorPanelLayout.setVerticalGroup(
            instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instructorPanelLayout.createSequentialGroup()
                .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(instructorPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(emailTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(passwordTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(instIdTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(instructorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addInstructor)
                            .addComponent(updateInstructor)
                            .addComponent(deleteInstructor))
                        .addGap(18, 18, 18)
                        .addComponent(back1))
                    .addGroup(instructorPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("instructor", instructorPanel);

        jLabel6.setText("email :");

        jLabel7.setText("password :");

        addStudent.setText("add");
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });

        updateStudent.setText("update");
        updateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStudentActionPerformed(evt);
            }
        });

        deleteStudent.setText("delete");
        deleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentActionPerformed(evt);
            }
        });

        back2.setText("back");
        back2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back2ActionPerformed(evt);
            }
        });

        jTable3.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "email", "password", "student id"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jLabel8.setText("student id :");

        javax.swing.GroupLayout studentPanelLayout = new javax.swing.GroupLayout(studentPanel);
        studentPanel.setLayout(studentPanelLayout);
        studentPanelLayout.setHorizontalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addComponent(addStudent)
                        .addGap(18, 18, 18)
                        .addComponent(updateStudent)
                        .addGap(18, 18, 18)
                        .addComponent(deleteStudent))
                    .addComponent(back2)
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(29, 29, 29)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stdIdTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        studentPanelLayout.setVerticalGroup(
            studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanelLayout.createSequentialGroup()
                .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(emailTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(passwordTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(stdIdTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(studentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addStudent)
                            .addComponent(updateStudent)
                            .addComponent(deleteStudent))
                        .addGap(18, 18, 18)
                        .addComponent(back2))
                    .addGroup(studentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("student", studentPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAdminActionPerformed
        // TODO add your handling code here:
        String email = emailTextField.getText();
        String pass = passwordTextField.getText();
        connection con = new connection();
        con.putData(email, pass);
        try {
            getDataForAdminTable();
        } catch (Exception e) {
            System.out.println(e);
        }
        /*admin admin = new admin();
        admin.addAdmin(email,pass);*/

        /* put data into admin table*/
    }//GEN-LAST:event_addAdminActionPerformed

    private void updateAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAdminActionPerformed
        // TODO add your handling code here:
        String email = emailTextField.getText();
        String pass = passwordTextField.getText();
        connection con = new connection();
        con.updateDataWithEmail("admin_login", "password", "'" + pass + "'", oldEmail);
        con.updateDataWithEmail("admin_login", "email", "'" + email + "'", oldEmail);
        try {
            getDataForAdminTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateAdminActionPerformed

    private void deleteAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAdminActionPerformed
        // TODO add your handling code here:
        String email = emailTextField.getText();
        connection con = new connection();
        con.deleteData("admin_login", " email = '" + email + "'");
        try {
            getDataForAdminTable();
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_deleteAdminActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
 this.setVisible(false);
        new gui_glass().setVisible(true);    }//GEN-LAST:event_backActionPerformed

    private void addInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInstructorActionPerformed
        // TODO add your handling code here:
        String email = emailTextField1.getText();
        String pass = passwordTextField1.getText();
        String instId = instIdTextField2.getText();
        connection con = new connection();
        con.putData("inst_login", email, pass, instId);
        try {
            getDataForInstTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_addInstructorActionPerformed

    private void updateInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInstructorActionPerformed
        // TODO add your handling code here:
        String email = emailTextField1.getText();
        String pass = passwordTextField1.getText();
        String id = instIdTextField2.getText();
        connection con = new connection();

        con.updateDataWithEmail("inst_login", "password", "'" + pass + "'", oldEmail);
        con.updateDataWithEmail("inst_login", "inst_id", id, oldEmail);
        con.updateDataWithEmail("inst_login", "email", "'" + email + "'", oldEmail);
        try {
            getDataForInstTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateInstructorActionPerformed

    private void deleteInstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInstructorActionPerformed
        // TODO add your handling code here:
        String email = emailTextField1.getText();
        connection con = new connection();
        con.deleteData("inst_login", " email = '" + email + "'");
        try {
            getDataForInstTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteInstructorActionPerformed

    private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed
        // TODO add your handling code here:
        String email = emailTextField2.getText();
        String pass = passwordTextField2.getText();
        String stdId = stdIdTextField3.getText();
        connection con = new connection();
        con.putData("std_login", email, pass, stdId);
        try {
            getDataForStdTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_addStudentActionPerformed

    private void updateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStudentActionPerformed
        // TODO add your handling code here:
        String email = emailTextField2.getText();
        String pass = passwordTextField2.getText();
        String id = stdIdTextField3.getText();
        connection con = new connection();
        con.updateDataWithEmail("std_login", "password", "'" + pass + "'", oldEmail);
        con.updateDataWithEmail("std_login", "std_id", id, oldEmail);
        con.updateDataWithEmail("std_login", "email", "'" + email + "'", oldEmail);
        try {
            getDataForStdTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_updateStudentActionPerformed

    private void deleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentActionPerformed
        // TODO add your handling code here:
        String email = emailTextField2.getText();
        connection con = new connection();
        con.deleteData("Std_login", " email = '" + email + "'");
        try {
            getDataForStdTable();
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_deleteStudentActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        emailTextField.setText(model.getValueAt(i, 0).toString());
        passwordTextField.setText(model.getValueAt(i, 1).toString());
        oldEmail = emailTextField.getText();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int i = jTable2.getSelectedRow();
        TableModel model = jTable2.getModel();
        emailTextField1.setText(model.getValueAt(i, 0).toString());
        passwordTextField1.setText(model.getValueAt(i, 1).toString());
        instIdTextField2.setText(model.getValueAt(i, 2).toString());
        oldEmail = emailTextField1.getText();
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        int i = jTable3.getSelectedRow();
        TableModel model = jTable3.getModel();
        emailTextField2.setText(model.getValueAt(i, 0).toString());
        passwordTextField2.setText(model.getValueAt(i, 1).toString());
        stdIdTextField3.setText(model.getValueAt(i, 2).toString());
        oldEmail = emailTextField2.getText();
    }//GEN-LAST:event_jTable3MouseClicked

    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed
        this.setVisible(false);
        new gui_glass().setVisible(true);  
    }//GEN-LAST:event_back1ActionPerformed

    private void back2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back2ActionPerformed
         this.setVisible(false);
        new gui_glass().setVisible(true);  
    }//GEN-LAST:event_back2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAdmin;
    private javax.swing.JButton addInstructor;
    private javax.swing.JButton addStudent;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JButton back;
    private javax.swing.JButton back1;
    private javax.swing.JButton back2;
    private javax.swing.JButton deleteAdmin;
    private javax.swing.JButton deleteInstructor;
    private javax.swing.JButton deleteStudent;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField emailTextField1;
    private javax.swing.JTextField emailTextField2;
    private javax.swing.JTextField instIdTextField2;
    private javax.swing.JPanel instructorPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JTextField passwordTextField1;
    private javax.swing.JTextField passwordTextField2;
    private javax.swing.JTextField stdIdTextField3;
    private javax.swing.JPanel studentPanel;
    private javax.swing.JButton updateAdmin;
    private javax.swing.JButton updateInstructor;
    private javax.swing.JButton updateStudent;
    // End of variables declaration//GEN-END:variables

    private void getDataForAdminTable() throws SQLException {
        ArrayList<login_getter> data = new ArrayList<>();
        connection con = new connection();
        ResultSet rs = con.getDataAllResult("admin_login", "email", "password");
        login_getter login_getter;
        while (rs.next()) {
            login_getter = new login_getter(rs.getString("email"), rs.getString("password"));
            data.add(login_getter);
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[2];
        for (int i = 0; i < data.size(); i++) {
            row[0] = data.get(i).getEmail();
            row[1] = data.get(i).getPasssword();
            model.addRow(row);
        }
    }

    private void getDataForStdTable() throws SQLException {
        ArrayList<login_getter> data = new ArrayList<>();
        connection con = new connection();
        ResultSet rs = con.getDataAllResult("std_login", "email", "password", "std_id");
        login_getter login_getter;
        while (rs.next()) {
            login_getter = new login_getter(rs.getString("email"), rs.getString("password"), rs.getInt("std_id"));
            data.add(login_getter);
        }
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for (int i = 0; i < data.size(); i++) {
            row[0] = data.get(i).getEmail();
            row[1] = data.get(i).getPasssword();
            row[2] = data.get(i).getId();
            model.addRow(row);
        }
    }

    private void getDataForInstTable() throws SQLException {
        ArrayList<login_getter> data = new ArrayList<>();
        connection con = new connection();
        ResultSet rs = con.getDataAllResult("inst_login", "email", "password", "inst_id");
        login_getter login_getter;
        while (rs.next()) {
            login_getter = new login_getter(rs.getString("email"), rs.getString("password"), rs.getInt("inst_id"));
            data.add(login_getter);
        }
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        Object[] row = new Object[3];
        for (int i = 0; i < data.size(); i++) {
            row[0] = data.get(i).getEmail();
            row[1] = data.get(i).getPasssword();
            row[2] = data.get(i).getId();
            model.addRow(row);
        }
    }
}
